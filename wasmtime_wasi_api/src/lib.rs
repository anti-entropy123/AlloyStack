#![no_std]

extern crate alloc;

use alloc::{string::{String, ToString}, vec::Vec};
pub use wasmtime;
use wasmtime::{Engine, Linker, Module};

pub mod data_buffer;
// mod capis;
mod types;
mod wasi;
pub use wasi::JMP_BUF_MAP;

pub struct LibosCtx {
    pub id: String
}

pub fn build_wasm(cwasm: &[u8]) -> (Engine, Module, Linker<LibosCtx>) {
    let engine: Engine = Engine::default();
    let module: Module = unsafe { Module::deserialize(&engine, cwasm) }.map_err(|e| e.to_string()).unwrap();
    let mut linker = Linker::new(&engine);
    import_all(&mut linker);
    (engine, module, linker)
}

pub fn set_wasi_args(id: &str, args: Vec<String>) {
    wasi::set_wasi_state(id, args);
}

fn import_all(linker: &mut Linker<LibosCtx>) {
    linker
        .func_wrap(
            "env",
            "buffer_register",
            data_buffer::buffer_register,
        )
        .unwrap();
    linker
        .func_wrap(
            "env",
            "access_buffer",
            data_buffer::access_buffer,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "args_get",
            wasi::args_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "args_sizes_get",
            wasi::args_sizes_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "clock_res_get",
            wasi::clock_res_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "clock_time_get",
            wasi::clock_time_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "environ_get",
            wasi::environ_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "environ_sizes_get",
            wasi::environ_sizes_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_advise",
            wasi::fd_advise,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_close",
            wasi::fd_close,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_datasync",
            wasi::fd_datasync,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_fdstat_get",
            wasi::fd_fdstat_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_fdstat_set_flags",
            wasi::fd_fdstat_set_flags,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_filestat_get",
            wasi::fd_filestat_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_filestat_set_size",
            wasi::fd_filestat_set_size,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_filestat_set_times",
            wasi::fd_filestat_set_times,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_pread",
            wasi::fd_pread,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_pwrite",
            wasi::fd_pwrite,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_prestat_get",
            wasi::fd_prestat_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_prestat_dir_name",
            wasi::fd_prestat_dir_name,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_read",
            wasi::fd_read,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_readdir",
            wasi::fd_readdir,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_seek",
            wasi::fd_seek,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_sync",
            wasi::fd_sync,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_tell",
            wasi::fd_tell,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "fd_write",
            wasi::fd_write,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "path_create_directory",
            wasi::path_create_directory,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "path_filestat_get",
            wasi::path_filestat_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "path_filestat_set_times",
            wasi::path_filestat_set_times,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "path_link",
            wasi::path_link,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "path_open",
            wasi::path_open,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "path_readlink",
            wasi::path_readlink,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "path_remove_directory",
            wasi::path_remove_directory,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "path_rename",
            wasi::path_rename,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "path_symlink",
            wasi::path_symlink,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "path_unlink_file",
            wasi::path_unlink_file,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "poll_oneoff",
            wasi::poll_oneoff,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "proc_exit",
            wasi::proc_exit,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "random_get",
            wasi::random_get,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "sched_yield",
            wasi::sched_yield,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "sock_accept",
            wasi::sock_accept,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "sock_recv",
            wasi::sock_recv,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "sock_send",
            wasi::sock_send,
        )
        .unwrap();
    linker
        .func_wrap(
            "wasi_snapshot_preview1",
            "sock_shutdown",
            wasi::sock_shutdown,
        )
        .unwrap();

}